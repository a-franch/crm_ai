///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьПодписки() Экспорт
	
	EndPoint = RESTAPIEndPoint();
	ТелоЗапроса = SubscriberRequest();
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/json");
	
	Запрос = Новый HTTPЗапрос("api/rest/public/subscriber", Заголовки);
	Запрос.УстановитьТелоИзСтроки(ТелоЗапроса);
	
	Результат = EndPoint.ОтправитьДляОбработки(Запрос);
	
	Если Результат.КодСостояния <> 200 Тогда
		ВызватьИсключение НСтр("ru = 'Сервис вернул код состояния: '") + Результат.КодСостояния;
	КонецЕсли;
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Результат.ПолучитьТелоКакСтроку());
	
	ДанныеПодписок = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	
	ТЗРезультат = Новый ТаблицаЗначений;
	ТЗРезультат.Колонки.Добавить("CodeAPI");
	ТЗРезультат.Колонки.Добавить("Name");
	ТЗРезультат.Колонки.Добавить("RegNumbers");
	ТЗРезультат.Колонки.Добавить("Наименование");
	ТЗРезультат.Колонки.Добавить("ИНН");
	ТЗРезультат.Колонки.Добавить("Номер");
	ТЗРезультат.Колонки.Добавить("РегНомер");
	ТЗРезультат.Колонки.Добавить("Подписка");
	
	Для Каждого ОписаниеПодписки Из ДанныеПодписок.subscribers Цикл
		
		Для каждого ТекИТС Из ОписаниеПодписки.subjects Цикл
	
			СтрокаТаблицы = ТЗРезультат.Добавить();
			СтрокаТаблицы.CodeAPI = ОписаниеПодписки.code;
			СтрокаТаблицы.Name = ОписаниеПодписки.Name;
			СтрокаТаблицы.Подписка = ТекИТС;
			
			Если ОписаниеПодписки.organizations.Количество() > 0 Тогда
				
				СтрокаТаблицы.ИНН = ОписаниеПодписки.organizations[0].inn;
				СтрокаТаблицы.Наименование = ОписаниеПодписки.organizations[0].name;				
				
			КонецЕсли;
			
			РегНомераСтрокой = "";
			
			Если ОписаниеПодписки.regNumbers <> Неопределено Тогда
				
				СтрокаТаблицы.RegNumbers = Новый СписокЗначений;
				
				Для Каждого РегНомер Из ОписаниеПодписки.regNumbers Цикл
					
					СтрокаТаблицы.RegNumbers.Добавить(РегНомер);
					
					РегНомераСтрокой = РегНомераСтрокой + ?(РегНомераСтрокой = "", "", ", "	) + Формат(РегНомер, "ЧГ=0");
					
				КонецЦикла;
				
			КонецЕсли;
			
			СтрокаТаблицы.РегНомер = РегНомераСтрокой;
		
		КонецЦикла;
		
	КонецЦикла;
		
	Возврат ТЗРезультат;		
		
КонецФункции

Функция RESTAPIEndPoint()
	
	URL = "https://partner-api.1c.ru/api";
	
	Логин  = Константы.ЛогинИТС_API.Получить();
	Пароль = Константы.ПарольИТС_API.Получить();
	
	СтруктрураURI = СтруктураURI(URL);
	Порт = ?(СтруктрураURI.Порт = Неопределено,
		?(НРег(СтруктрураURI.Схема) = "https", 443, 80),
		СтруктрураURI.Порт);
	
	Возврат Новый HTTPСоединение(
		СтруктрураURI.Хост,
		Порт,
		Логин,
		Пароль,
		Неопределено, // При необходимости нужно описать прокси.
		30,
		ЗащищенноеСоединение());
	
КонецФункции

Функция SubscriberRequest()
	
	ЗаписьДанныхСообщения = Новый ЗаписьJSON;
	ЗаписьДанныхСообщения.УстановитьСтроку();
	
	ЗаписьДанныхСообщения.ЗаписатьНачалоОбъекта();
	
	ЗаписьДанныхСообщения.ЗаписатьИмяСвойства("page");
	ЗаписьДанныхСообщения.ЗаписатьЗначение(0);
	
	ЗаписьДанныхСообщения.ЗаписатьИмяСвойства("size");
	ЗаписьДанныхСообщения.ЗаписатьЗначение(300);
	
	ЗаписьДанныхСообщения.ЗаписатьКонецОбъекта();
	
	Возврат ЗаписьДанныхСообщения.Закрыть();
	
КонецФункции

Функция СтруктураURI(Знач СтрокаURI)
	
	СтрокаURI = СокрЛП(СтрокаURI);
	
	// схема
	Схема = "";
	Позиция = СтрНайти(СтрокаURI, "://");
	Если Позиция > 0 Тогда
		Схема = НРег(Лев(СтрокаURI, Позиция - 1));
		СтрокаURI = Сред(СтрокаURI, Позиция + 3);
	КонецЕсли;
	
	// Строка соединения и путь на сервере.
	СтрокаСоединения = СтрокаURI;
	ПутьНаСервере = "";
	Позиция = СтрНайти(СтрокаСоединения, "/");
	Если Позиция > 0 Тогда
		ПутьНаСервере = Сред(СтрокаСоединения, Позиция + 1);
		СтрокаСоединения = Лев(СтрокаСоединения, Позиция - 1);
	КонецЕсли;
	
	// Информация пользователя и имя сервера.
	СтрокаАвторизации = "";
	ИмяСервера = СтрокаСоединения;
	Позиция = СтрНайти(СтрокаСоединения, "@");
	Если Позиция > 0 Тогда
		СтрокаАвторизации = Лев(СтрокаСоединения, Позиция - 1);
		ИмяСервера = Сред(СтрокаСоединения, Позиция + 1);
	КонецЕсли;
	
	// логин и пароль
	Логин = СтрокаАвторизации;
	Пароль = "";
	Позиция = СтрНайти(СтрокаАвторизации, ":");
	Если Позиция > 0 Тогда
		Логин = Лев(СтрокаАвторизации, Позиция - 1);
		Пароль = Сред(СтрокаАвторизации, Позиция + 1);
	КонецЕсли;
	
	// хост и порт
	Хост = ИмяСервера;
	Порт = "";
	Позиция = СтрНайти(ИмяСервера, ":");
	Если Позиция > 0 Тогда
		Хост = Лев(ИмяСервера, Позиция - 1);
		Порт = Сред(ИмяСервера, Позиция + 1);
		Если Не ТолькоЦифрыВСтроке(Порт) Тогда
			Порт = "";
		КонецЕсли;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Схема", Схема);
	Результат.Вставить("Логин", Логин);
	Результат.Вставить("Пароль", Пароль);
	Результат.Вставить("ИмяСервера", ИмяСервера);
	Результат.Вставить("Хост", Хост);
	Результат.Вставить("Порт", ?(ПустаяСтрока(Порт), Неопределено, Число(Порт)));
	Результат.Вставить("ПутьНаСервере", ПутьНаСервере);
	
	Возврат Результат;
	
КонецФункции

Функция ТолькоЦифрыВСтроке(Знач Значение, Знач Устаревший = Истина, Знач ПробелыЗапрещены = Истина)
	
	Если ТипЗнч(Значение) <> Тип("Строка") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ПробелыЗапрещены Тогда
		Значение = СтрЗаменить(Значение, " ", "");
	КонецЕсли;
		
	Если СтрДлина(Значение) = 0 Тогда
		Возврат Истина;
	КонецЕсли;
	
	// Если содержит только цифры, то в результате замен должна быть получена пустая строка.
	// Проверять при помощи ПустаяСтрока нельзя, так как в исходной строке могут быть пробельные символы.
	Возврат СтрДлина(
		СтрЗаменить( СтрЗаменить( СтрЗаменить( СтрЗаменить( СтрЗаменить(
		СтрЗаменить( СтрЗаменить( СтрЗаменить( СтрЗаменить( СтрЗаменить( 
			Значение, "0", ""), "1", ""), "2", ""), "3", ""), "4", ""), "5", ""), "6", ""), "7", ""), "8", ""), "9", "")) = 0;
	
КонецФункции

Функция ЗащищенноеСоединение()
	
	Возврат Новый ЗащищенноеСоединениеOpenSSL(, Новый СертификатыУдостоверяющихЦентровОС);
	
КонецФункции

#КонецОбласти