&НаСервере
Функция ПолучитьОстатокДнейОтпуска()
	
	Запрос = Новый запрос;   
		
	Запрос.Текст = "ВЫБРАТЬ
	               |	ГрафикОтпусков.ДнейОтпуска КАК ДнейОтпуска
	               |ИЗ
	               |	Документ.ГрафикОтпусков КАК ГрафикОтпусков
	               |ГДЕ
	               |	ГрафикОтпусков.Сотрудник = &ТекущийПользователь
	               |	И НЕ ГрафикОтпусков.ПометкаУдаления
	               |	И ГрафикОтпусков.Дата МЕЖДУ &НачалоГода И &КонецГода
	               |ИТОГИ
	               |	СУММА(ДнейОтпуска)
	               |ПО
	               |	ОБЩИЕ"; 	
	
 	
	Запрос.УстановитьПараметр("ТекущийПользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(ТекущаяДата()));
	Запрос.УстановитьПараметр("КонецГода", КонецГода(ТекущаяДата()));	
	
	Выборка = Запрос.Выполнить().Выбрать();       
 
	Если Выборка.Следующий() Тогда
		
		ОстатокДнейОтпуска = 28 - Выборка.ДнейОтпуска;      
		
	Иначе
		
		ОстатокДнейОтпуска = 0;
		
	КонецЕсли;  	
		
	Возврат ОстатокДнейОтпуска;   
	
КонецФункции


&НаСервере
Процедура ОбновитьДанныеФормы() 
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДнейОтпускаЧисло = ПолучитьОстатокДнейОтпуска();
	
	Если ДнейОтпускаЧисло > 0 Тогда	
	
		ОстатокОтпуска = Строка(ПараметрыСеанса.ТекущийПользователь) + " остаток отпуска " + Строка(ДнейОтпускаЧисло) + " дней";  
		
	ИначеЕсли ДнейОтпускаЧисло = 0 Тогда	
	
		ОстатокОтпуска = Строка(ПараметрыСеанса.ТекущийПользователь) + " весь отпуск израсходован"; 
		
	Иначе
		
		ОстатокОтпуска = Строка(ПараметрыСеанса.ТекущийПользователь) + " остаток отпуска превышен на " + Строка(-ДнейОтпускаЧисло) + " дней"; 
		Элементы.ОстатокДнейОтпуска.ЦветТекста = Новый Цвет(255,0,0);
		
	КонецЕсли;
		
	ПостроитьДиаграммуГанта(); 
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры                                                               


// Отлавливаем оповещение, направляемое с формы документа при записи

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
		
	Если ИмяСобытия = "ЗаписанГрафикОтпусков" Тогда		  
		
		ОбновитьДанныеФормы(); 
		 
	КонецЕсли;          
	
КонецПроцедуры


// Построение Диаграммы Ганта

&НаСервере 
Процедура ПостроитьДиаграммуГанта()  
	
	ДиаграммаГанта = Элементы.ДиаграммаГанта;
	ДиаграммаГанта.Обновление = Ложь; 
	ДиаграммаГанта.Очистить();
	
	// Настройка шкалы времени
	ШкалаВремени = ДиаграммаГанта.ОбластьПостроения.ШкалаВремени;
	Месяц = ШкалаВремени.Элементы.Добавить();   
	Месяц.Единица = ТипЕдиницыШкалыВремени.Месяц;
	Месяц.Кратность = 1;       	
	
	// Построение колонок по всем месяцам, даже если нет отпусков в этот месяц
	ДиаграммаГанта.АвтоОпределениеПолногоИнтервала = Ложь;
	ДиаграммаГанта.УстановитьПолныйИнтервал(Период.ДатаНачала, Период.ДатаОкончания);     // Нужно ставить вручную интервал на следующий год
	
	ДневнаяШкала = ДиаграммаГанта.ОбластьПостроения.ШкалаВремени.Элементы.Добавить();
	ДневнаяШкала.Единица = ТипЕдиницыШкалыВремени.Неделя;
	
	 
	Запрос = Новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ГрафикОтпусков.Сотрудник КАК Сотрудник,
	               |	ГрафикОтпусков.НачалоОтпуска КАК НачалоОтпуска,
	               |	ГрафикОтпусков.ОкончаниеОтпуска КАК ОкончаниеОтпуска,
	               |	ГрафикОтпусков.ДнейОтпуска КАК ДнейОтпуска,
	               |	ГрафикОтпусков.Завершен КАК Завершен,
	               |	ПРЕДСТАВЛЕНИЕ(ГрафикОтпусков.Сотрудник) КАК СотрудникПредставление
	               |ИЗ
	               |	Документ.ГрафикОтпусков КАК ГрафикОтпусков
	               |ГДЕ
	               |	НЕ ГрафикОтпусков.ПометкаУдаления
	               |	И ГрафикОтпусков.Дата МЕЖДУ &НачалоГода И &КонецГода";
					  
	
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(ТекущаяДата()));
	Запрос.УстановитьПараметр("КонецГода", КонецГода(ТекущаяДата()));     
	Выборка = Запрос.Выполнить().Выбрать();
	

	// Заполняем в цикле данные для диаграммы результатом запроса  
 
	Пока Выборка.Следующий() Цикл
	
		Точка = ДиаграммаГанта.УстановитьТочку(Выборка.Сотрудник);
		Точка.Текст = Выборка.СотрудникПредставление;
		Серия = ДиаграммаГанта.УстановитьСерию(Выборка.Сотрудник);
		Значение = ДиаграммаГанта.ПолучитьЗначение(Точка, Серия);
		Интервал = Значение.Добавить();
	    Интервал.Начало = Выборка.НачалоОтпуска; 
		ОкончаниеОтпуска = КонецДня(Выборка.ОкончаниеОтпуска);
	    Интервал.Конец = ОкончаниеОтпуска; 
		
		Если Выборка.Завершен Тогда
			Интервал.Цвет = WebЦвета.СветлоСерый;       // Цвет завершенных периодов
			Интервал.Текст = "Завершен";   
		КонецЕсли	
	 
	КонецЦикла;     
	
	ДиаграммаГанта.Обновление = Истина;
	ДиаграммаГанта.ОтображатьПустыеЗначения = Ложь;  
	ДиаграммаГанта.ОтображатьЛегенду = Ложь;
	ДиаграммаГанта.ОбластьПостроения.Право = 1;  // Расширяем колонки на всю ширину

	
	// Настройка отметки текущей даты
	ЭлементМеток = ДиаграммаГанта.ОбластьПостроения.ШкалаВремени.Элементы.Добавить(); 
	ТекущаяДата = ТекущаяДата(); 
	Метка = ЭлементМеток.Метки.Добавить(ТекущаяДата); 
	Метка.Текст = "Сегодня"; 
	Метка.ЦветТекста = WebЦвета.Зеленый; 
	Метка.ЦветЛинии = Метка.ЦветТекста;    	    
	                  		 
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Период.ДатаНачала = НачалоГода(ТекущаяДата());
	Период.ДатаОкончания = КонецГода(ТекущаяДата());
	ОбновитьДанныеФормы(); 
	
КонецПроцедуры
   



