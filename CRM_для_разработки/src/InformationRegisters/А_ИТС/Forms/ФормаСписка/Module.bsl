
&НаКлиенте
Процедура ЗагрузитьИзExcel(Команда)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл";
	Диалог.ПолноеИмяФайла = ""; 
	Фильтр = "Файл Excel (*.xlsx)|*.xlsx"; 
	Диалог.Фильтр = Фильтр; 
    Диалог.МножественныйВыбор = Ложь;
	
	Если Диалог.Выбрать() Тогда
		
		ЗагрузитьИзФайла(Диалог.ПолноеИмяФайла);
		
	КонецЕсли;
	
	Элементы.Список.Обновить();
		
КонецПроцедуры

&НаСервере
Функция ЗагружатьДоговор(НазваниеДоговора)
	
	МассивЗагружаемых = Новый Массив;
	МассивЗагружаемых.Добавить("ИТС Технологическая поставка");
	МассивЗагружаемых.Добавить("ИТС Проф");
	МассивЗагружаемых.Добавить("Предприятие через Интернет ТЕХНО");
	МассивЗагружаемых.Добавить("Предприятие через Интернет ПРОФ");
	МассивЗагружаемых.Добавить("СтартЭДО");
	МассивЗагружаемых.Добавить("1С:КП Базовый");
	МассивЗагружаемых.Добавить("1С:КП ПРОФ 8+4");
	МассивЗагружаемых.Добавить("1С:КП ПРОФ на 12 месяцев с помесячной оплатой и автоматической пролонгацией");
	МассивЗагружаемых.Добавить("1С:КП Базовый на 12 месяцев с помесячной оплатой и автоматической пролонгацией");
	МассивЗагружаемых.Добавить("1С:КП ПРОФ");
	
	Возврат МассивЗагружаемых.Найти(СокрЛП(НазваниеДоговора)) <> Неопределено;
			
КонецФункции

&НаСервере
Функция ЗначениеХЛС(ХЛС, НомерСтроки, НомерКолонки)
	
	ТекСтрока = ХЛС.Получить(НомерСтроки - 1);
	Возврат ТекСтрока[НомерКолонки - 1];
	
КонецФункции

&НаСервере
Процедура ЗагрузитьДанныеНаСервере(Адрес, РасширениеФайла)	

	УстановитьПривилегированныйРежим(Истина);	
	
	ФайлПриемник 	= ПолучитьИмяВременногоФайла(РасширениеФайла);
	ДанныеХранилища = ПолучитьИзВременногоХранилища(Адрес);
	ДанныеХранилища.Записать(ФайлПриемник);
	
	ТабДок = Новый ТабличныйДокумент;
	
	Попытка
		ТабДок.Прочитать(ФайлПриемник);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	ХЛС = ПолучитьТЗИзМакета(ТабДок);            
			
	ТекСтрока = 1;
		
	ДатаОтчетаСтр = Прав(ТабДок.Область(1, 1).Текст,10);//Прав(ЗначениеХЛС(ХЛС,1,1),10);
	
	ДатаОтчета = Дата(Прав(ДатаОтчетаСтр, 4),Сред(ДатаОтчетаСтр,4,2), Лев(ДатаОтчетаСтр,2));
			
	Пока ТекСтрока <= ХЛС.Количество() Цикл

		Если (Найти(ВРЕГ(СокрЛП(ЗначениеХЛС(ХЛС,ТекСтрока,4))), "АНАЛИТИКА") > 0) ИЛИ НЕ ЗагружатьДоговор(ЗначениеХЛС(ХЛС,ТекСтрока,6)) Тогда
							
			Сообщить("Пропущена строка " + СокрЛП(ЗначениеХЛС(ХЛС,ТекСтрока,6)) + " " + СокрЛП(ЗначениеХЛС(ХЛС,ТекСтрока,4)));
			
			ТекСтрока = ТекСтрока + 1;
			
			Продолжить;
			
		КонецЕсли;
		
		РегНомер = Формат(ЗначениеХЛС(ХЛС,ТекСтрока,3), "ЧГ=0");
		
		ДатаНач = СокрЛП(ЗначениеХЛС(ХЛС,ТекСтрока,7));
		ДатаКон = СокрЛП(ЗначениеХЛС(ХЛС,ТекСтрока,8));
		
		ЗагрузитьСтрокуОтчетаИТС(ДатаОтчета, РегНомер, СокрЛП(ЗначениеХЛС(ХЛС,ТекСтрока,6)), ЗначениеХЛС(ХЛС,ТекСтрока,3), ЗначениеХЛС(ХЛС,ТекСтрока,5), ЗначениеХЛС(ХЛС,ТекСтрока,4), ДатаНач, ДатаКон);
		
		ТекСтрока = ТекСтрока + 1;
		
	КонецЦикла;
	
    УдалитьФайлы(ФайлПриемник);      
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Функция ПолучитьТЗИзМакета(ТабДок, КолонкаИндекса = 1) Экспорт
	
	//Начальные установки для Excel документа
	КоличествоКолонок = 30;
	ПозицияНачалаТаблицы = 5; 
	МаксКоличествоСтрок = 1000;
	
	ТаблицаДанных = Новый ТаблицаЗначений;
	НомерКолонки = 0;
	Пока НомерКолонки < КоличествоКолонок Цикл
		НомерКолонки = НомерКолонки + 1;
		ИмяКолонки = ТабДок.Область(ПозицияНачалаТаблицы, НомерКолонки).Текст;
		
		ИмяКолонки = СтрЗаменить(ИмяКолонки,"№","Номер");
		ИмяКолонки = СтрЗаменить(ИмяКолонки,".","");
		ИмяКолонки = СтрЗаменить(ИмяКолонки,":","");
		ИмяКолонки = СтрЗаменить(ИмяКолонки,Символы.ПС,"");
		ИмяКолонки = СтрЗаменить(ИмяКолонки," ","");
		ИмяКолонки = СтрЗаменить(ИмяКолонки,"/","");
		ИмяКолонки = СтрЗаменить(ИмяКолонки,")","");
		ИмяКолонки = СтрЗаменить(ИмяКолонки,"(","");
		ИмяКолонки = СтрЗаменить(ИмяКолонки,"-","");
		ИмяКолонки = СтрЗаменить(ИмяКолонки,"%","");
		ИмяКолонки = СтрЗаменить(ИмяКолонки,Символы.ПС,"");
		
		Если ПустаяСтрока(ИмяКолонки) Тогда
			ИмяКолонки = "Номер" + СТРОКА(НомерКолонки);
		КонецЕсли;     
				
		ТаблицаДанных.Колонки.Добавить(ИмяКолонки);
	КонецЦикла;
	
	СчетчикКолонок = НомерКолонки - 1;
	
	НомерСтроки = ПозицияНачалаТаблицы; ФлагПрерывания = Ложь;
	Пока НомерСтроки < МаксКоличествоСтрок Цикл
		НомерСтроки = НомерСтроки + 1;
		Стр = ТаблицаДанных.Добавить();
		
		Для А = 1 ПО СчетчикКолонок Цикл
			ТекстКолонки = ТабДок.Область(НомерСтроки, А).Текст;
			ТекстКолонки2 = ТабДок.Область(НомерСтроки, А+1).Текст;
			ТекстКолонки3 = ТабДок.Область(НомерСтроки, А+2).Текст;
			ТекстКолонки4 = ТабДок.Область(НомерСтроки, А+3).Текст;
			
			Если ПустаяСтрока(ТекстКолонки) и ПустаяСтрока(ТекстКолонки2) и ПустаяСтрока(ТекстКолонки3) и ПустаяСтрока(ТекстКолонки4) Тогда
				Если А = КолонкаИндекса Тогда
					Флагпрерывания = Истина;
					ТаблицаДанных.Удалить(Стр);
				КонецЕсли;
			Иначе
				Стр[А - 1] = ТекстКолонки
			КонецЕсли;
			
			Если Флагпрерывания Тогда
				Прервать
			КонецЕсли;
		КонецЦикла;
		
		Если Флагпрерывания Тогда
			Прервать
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицаДанных
	
КонецФункции


&НаКлиенте
Процедура ЗагрузитьИзФайла(ИмяФайла)
	
	Если Не ЗначениеЗаполнено(ИмяФайла) Тогда
		Сообщить("Выберите файл для загрузки!");
		Возврат
	КонецЕсли;
	
	РасширениеФайла = ПолучитьРасширениеФайла(ИмяФайла);	
	ДвоичныеДанные	= Новый ДвоичныеДанные(ИмяФайла);
	Адрес			= ПоместитьВоВременноеХранилище(ДвоичныеДанные, Новый УникальныйИдентификатор);
	
	ЗагрузитьДанныеНаСервере(Адрес, РасширениеФайла);
			
КонецПроцедуры

&НаКлиенте
Функция ПолучитьРасширениеФайла(ИмяФайла) Экспорт
	ПозицияПоследнейТочки 			= 0;
	РасширениеФайла 				= ИмяФайла;
	
	Пока 1 = 1 Цикл
		ПозицияПоследнейТочки = Найти(РасширениеФайла, ".");
		Если ПозицияПоследнейТочки 	= 0 Тогда
			Прервать;
		Иначе
			РасширениеФайла 		= Сред(РасширениеФайла, ПозицияПоследнейТочки + 1)
		КонецЕсли;
	КонецЦикла;
	
	Возврат ?(РасширениеФайла = ИмяФайла, "", РасширениеФайла);
КонецФункции

&НаСервере
Процедура ЗагрузитьСтрокуОтчетаИТС(ДатаОтчета, РегНомер, ЕхВидИТС, ЕхРегНомер, ЕхИНН, ЕхНаименование, ДатаНач, ДатаКон)
	
			НЗ = РегистрыСведений.А_ИТС.СоздатьНаборЗаписей();
			
			НЗ.Отбор.Период.Установить(ДатаОтчета);
			НЗ.Отбор.РегНомер.Установить(РегНомер);
			НЗ.Прочитать();
			
			НЗ.Очистить();
			
			НоваяЗапись = НЗ.Добавить();
			
			НоваяЗапись.Период = ДатаОтчета;
			НоваяЗапись.РегНомер = РегНомер;
			НоваяЗапись.ВидИтс = СтрЗаменить(ЕхВидИТС,"Предприятие через Интернет","Fresh.com");
			
			Попытка
			
				РегНомерЧисло = Формат(ЕхРегНомер, "ЧГ=0");
				
			Исключение
				
				РегНомерЧисло = 0;
				
			КонецПопытки;						
			
			ВыбИНН = Формат(ЕхИНН, "ЧГ=0");
			
			Если ЗначениеЗаполнено(ВыбИНН) Тогда
			
				Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("ИНН", ВыбИНН);
				
			ИНаче
				
				Контрагент = Неопределено;
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Контрагент) Тогда
				
				НоваяЗапись.Контрагент = Контрагент;
				
			Иначе
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				               |	КонтрагентыРегНомера.Ссылка
				               |ИЗ
				               |	Справочник.Контрагенты.РегНомера КАК КонтрагентыРегНомера
				               |ГДЕ
				               |	КонтрагентыРегНомера.РегНомер = &Значение";
				
				Запрос.УстановитьПараметр("Значение", РегНомерЧисло);
				
				Результат = Запрос.Выполнить();
				Выборка = Результат.Выбрать();
				
				Если Выборка.Следующий() Тогда
				
					НоваяЗапись.Контрагент = Выборка.Ссылка;	
					
				Иначе
					
					НоваяЗапись.Комментарий = "Не найден: " + СокрЛП(Формат(ЕхНаименование));
					
				КонецЕсли;
				
			КонецЕсли;
						

			
			НоваяЗапись.НачалоПодписки = Дата(Прав(ДатаНач, 4),Сред(ДатаНач,4,2), Лев(ДатаНач,2));
			НоваяЗапись.ОкончаниеПодписки = Дата(Прав(ДатаКон, 4),Сред(ДатаКон,4,2), Лев(ДатаКон,2));
			
			Если ЗначениеЗаполнено(НоваяЗапись.Контрагент) И ЗначениеЗаполнено(НоваяЗапись.Контрагент.ОсновнойКурьер) Тогда
			
				НоваяЗапись.КурьерскаяСлужба = НоваяЗапись.Контрагент.ОсновнойКурьер;
				
			ИначеЕсли ЗначениеЗаполнено(НоваяЗапись.Контрагент) И (НоваяЗапись.Контрагент.БизнесРегион = Справочники.БизнесРегионы.Москва) Тогда
				
				НоваяЗапись.КурьерскаяСлужба = Константы.ОсновнойКурьерМосква.Получить();
				
			ИначеЕсли ЗначениеЗаполнено(НоваяЗапись.Контрагент) И (НоваяЗапись.Контрагент.БизнесРегион = Справочники.БизнесРегионы.МосковскаяОбласть) Тогда
				
				НоваяЗапись.КурьерскаяСлужба = Константы.ОсновнойКурьерОдинцово.Получить();
				
			ИначеЕсли ЗначениеЗаполнено(НоваяЗапись.Контрагент) И (НоваяЗапись.Контрагент.БизнесРегион = Справочники.БизнесРегионы.Одинцово) Тогда
				
				НоваяЗапись.КурьерскаяСлужба = Константы.ОсновнойКурьерОдинцово.Получить();
				
			ИначеЕсли ЗначениеЗаполнено(НоваяЗапись.Контрагент) И (НоваяЗапись.Контрагент.БизнесРегион = Справочники.БизнесРегионы.Западная13) Тогда
				
				НоваяЗапись.КурьерскаяСлужба = Константы.ОсновнойКурьерЗападная.Получить();
				
			КонецЕсли;
				
			НЗ.Записать();

	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьКонвертов(Команда)
	
	ТД = ПечатьКонвертовНаСервере(Элементы.Список.ВыделенныеСтроки);
	
	ТД.Показать();
	
КонецПроцедуры

&НаСервере
Функция ПроучитьЗапросПоКонтрагенту(ТекСтрока)
	
					   //|	А_ИТС.РегНомер,
					   //|	А_ИТС.Период,
					   //|	А_ИТС.ВидИТС,
					   //|	А_ИТС.Партнер,
					   //|	А_ИТС.НачалоПодписки,
					   //|	А_ИТС.ОкончаниеПодписки,
					   //|	А_ИТС.Партнер.НаименованиеПолное КАК ПартнерНаименование,
					   //|	Адрес.Представление КАК АдресПартнера,
					   //|	Телефон.Представление КАК ТелефонПартнера,
					   //|	КЛ.Ссылка КАК КонтактноеЛицо,
					   //|	КЛ_Телефон.Представление КАК ТелефонКЛ
					   // А_ИТС.РегНомер = &ВыбРегНомер
					   //|	И А_ИТС.Период = &ВыбПериод
	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	КонтрагентыКонтактныеЛица.ФИО,
		               |	КонтрагентыКонтактныеЛица.Телефон,
		               |	КонтрагентыКонтактныеЛица.Ссылка,
		               |	КонтрагентыКонтактныеЛица.Основной,
		               |	КонтрагентыКонтактныеЛица.НомерСтроки
		               |ПОМЕСТИТЬ КЛ
		               |ИЗ
		               |	Справочник.Контрагенты.КонтактныеЛица КАК КонтрагентыКонтактныеЛица
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ ПЕРВЫЕ 1
		               |	А_ИТС.РегНомер,
		               |	А_ИТС.Период,
		               |	А_ИТС.ВидИТС,
		               |	А_ИТС.Контрагент КАК Партнер,
		               |	А_ИТС.НачалоПодписки,
		               |	А_ИТС.ОкончаниеПодписки,
		               |	ВЫБОР
		               |		КОГДА А_ИТС.Контрагент.НаименованиеПолное = """"
		               |			ТОГДА А_ИТС.Контрагент.Наименование
		               |		ИНАЧЕ А_ИТС.Контрагент.НаименованиеПолное
		               |	КОНЕЦ КАК ПартнерНаименование,
		               |	ВЫРАЗИТЬ(А_ИТС.Комментарий КАК СТРОКА(100)) КАК Комментарий,
		               |	А_ИТС.Контрагент.ТелефонОрганизации КАК ТелефонПартнера,
		               |	А_ИТС.Контрагент.Адрес КАК АдресПартнера,
		               |	КЛ.ФИО КАК КонтактноеЛицо,
		               |	КЛ.Телефон КАК ТелефонКЛ,
		               |	КЛ.Основной КАК Основной,
		               |	КЛ.НомерСтроки КАК НомерСтроки
		               |ИЗ
		               |	РегистрСведений.А_ИТС КАК А_ИТС
		               |		ЛЕВОЕ СОЕДИНЕНИЕ КЛ КАК КЛ
		               |		ПО А_ИТС.Контрагент = КЛ.Ссылка
		               |ГДЕ
		               |	А_ИТС.РегНомер = &ВыбРегНомер
		               |	И А_ИТС.Период = &ВыбПериод
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Основной УБЫВ,
		               |	НомерСтроки";
		
		Запрос.УстановитьПараметр("ВыбРегНомер", ТекСтрока.РегНомер);
		Запрос.УстановитьПараметр("ВыбПериод", ТекСтрока.Период);
		

		Возврат Запрос;
	
КонецФункции

&НаСервере
Функция ПолучитьДанныеПоОригиналам()
	
	
     Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	ОригиналыДокументов.Ссылка,
	                |	ОригиналыДокументов.Номер,
	                |	ОригиналыДокументов.Дата,
	                |	ОригиналыДокументов.Контрагент,
	                |	ОригиналыДокументов.Сумма КАК СуммаДокумента,
	                |	ОригиналыДокументов.ВидДокумента
	                |ИЗ
	                |	Справочник.ОригиналыДокументов КАК ОригиналыДокументов
	                |ГДЕ
	                |	ОригиналыДокументов.Дата МЕЖДУ &НачПериода И &КонПериода";
	 
	 Запрос.УстановитьПараметр("НачПериода", НачалоГода(?(ЗначениеЗаполнено(ДатаОтчета), ДатаОтчета, ТекущаяДата())));
	 Запрос.УстановитьПараметр("КонПериода", КонецГода(?(ЗначениеЗаполнено(ДатаОтчета), ДатаОтчета, ТекущаяДата())));
	 
	 Возврат Запрос.Выполнить().Выгрузить();	 
	
КонецФункции

&НаСервере
Функция ПечатьКонвертовНаСервере(Знач Стр)
	
	ДанныеПоОригиналам = ПолучитьДанныеПоОригиналам();
	
	ТД = Новый ТабличныйДокумент;
	
	Макет = РегистрыСведений.А_ИТС.ПолучитьМакет("Конверт");
	
	ОбластьШапка 		= Макет.ПолучитьОбласть("Шапка");
	ОбластьОтчета 		= Макет.ПолучитьОбласть("ШапкаОтчета");
	ОбластьНЕПолучен 	= Макет.ПолучитьОбласть("ОригиналНеПолучен");
	ОбластьПодвал 		= Макет.ПолучитьОбласть("Подвал");
	
	Для каждого ТекСтрока Из Стр Цикл
				
		Запрос = ПроучитьЗапросПоКонтрагенту(ТекСтрока);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			Если Выборка.Партнер.НеПечататьКонвертИТС Тогда
				
				Сообщить("Не будет печататься конверт " + Строка(Выборка.Партнер));
				Продолжить;
				
				
			КонецЕсли;

			
			ОбластьШапка.Параметры.Заполнить(Выборка);	
			
			ОбластьШапка.Параметры.Предупреждение = "";
			
			ОбластьШапка.Параметры.ВыпускИТС = "Информационно Технологическое Сопровождение. Выпуск " + Формат(Выборка.Период, "ДФ='MMMM yyyy'") + " г.";
			
			Если НачалоМесяца(Выборка.Период) = НачалоМесяца(Выборка.ОкончаниеПодписки) Тогда
				
				ОбластьШапка.Параметры.ПоследнийВыпуск = "Внимание!!! Это последний выпуск ИТС в рамках текущего договора. Необходимо продлить договор ИТС! Узнайте подробности по телефону: 8 (495) 648 44 80.";	
				
			Иначе
				
				ОбластьШапка.Параметры.ПоследнийВыпуск = "";
				
			КонецЕсли;
			
				
			Найденные = ДанныеПоОригиналам.НайтиСтроки(Новый Структура("Контрагент", Выборка.Партнер));
			
			Если Найденные.Количество() > 0 Тогда
				
				
				ЕстьВложения = Ложь;
				
				Для каждого СтрокаДок Из Найденные Цикл
					
					Если НачалоМесяца(СтрокаДок.Дата) = НачалоМесяца(ДобавитьМесяц(ТекСтрока.Период, -1)) Тогда
						
						ЕстьВложения = Истина;	
						
					КонецЕсли;
					
				КонецЦикла;
				
				Если ЕстьВложения Тогда
					
					ОбластьШапка.Параметры.Предупреждение = "Внимание! В этом конверте есть документы на подпись.";										
					
				КонецЕсли;
					
			КонецЕсли;
				
			ТД.Вывести(ОбластьШапка);
			
			Если Найденные.Количество() > 0 Тогда
				
				Если ВыводитьОтчетПоОригиналам Тогда
					
					ТД.Вывести(ОбластьОтчета);
					
					Для каждого СтрокаДок Из Найденные Цикл
					
						ОбластьНЕПолучен.Параметры.Заполнить(СтрокаДок); 
						ОбластьНЕПолучен.Параметры.Номер = СокрЛП(СтрокаДок.Номер);
						ТД.Вывести(ОбластьНЕПолучен);
						
					КонецЦикла;
					
					ТД.Вывести(ОбластьПодвал);
					
				КонецЕсли;

			КонецЕсли;	
			
		КонецЕсли;
				
		ТД.ВывестиГоризонтальныйРазделительСтраниц();
					
	КонецЦикла;	
	
	ТД.ОтображатьЗаголовки 	= Ложь;
	ТД.ОтображатьСетку 		= Ложь;
	ТД.ОриентацияСтраницы 	= ОриентацияСтраницы.Ландшафт;
	
	Возврат ТД;
	
КонецФункции

&НаКлиенте
Процедура ВойтиВЛичныйКабинет(Команда)
	
	URL2 = "http://www.ttggroup.ru/services/courier-delivery/index.php";
	ВидСтраницы = "Логин";

КонецПроцедуры

&НаКлиенте
Процедура ПолеСайтаДокументСформирован(Элемент)
	
	Попытка
	
		ОбработатьЗагрузкуСтраницы();
		
	Исключение
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗагрузкуСтраницы()
	
	Если Элементы.ПолеСайта.Документ.readyState="complete" Тогда
		
		Если ВидСтраницы = "Логин" Тогда
		
			Док = Элементы.Полесайта.Документ;
			Док.forms(0).login.Value = "analitika";
			Док.forms(0).password.Value = "159456";
			
		ИначеЕсли ВидСтраницы = "Заявка" Тогда
			
			//frm1.target2 - Наша орг. 6
			//name2 - я                 7
			//address2 - откуда забрать   9
			//phone2 - мой телефон        10
			//date1 - когда забрать 2013-01-01  11
			//hour1  12
			//min1    13
			//hour2   14
			//min2    15
			//
			//target - контрагент  16
			//name                  17
			//address               19
			//phone                  20
			//date2                  21
			//hour3                  22
			//min3                   23
			//hour4                  24
			//min4                   25
			//vlog - вложение        33
			//poruch - комментарий   34
			
			ЗаполнитьЗаявку();

		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗаявку()
	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруЗаполненияЗаявки(Знач Стр)
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Контрагент");
	СтруктураВозврата.Вставить("КонтактноеЛицо");
	СтруктураВозврата.Вставить("Адрес");
	СтруктураВозврата.Вставить("Телефон");
	
	Для каждого ТекСтрока Из Стр Цикл
		
		Запрос = ПроучитьЗапросПоКонтрагенту(ТекСтрока);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			СтруктураВозврата.Контрагент = ?(ЗначениеЗаполнено(СтруктураВозврата.Контрагент), ", ", "") + Выборка.ПартнерНаименование;
			СтруктураВозврата.Адрес = Выборка.АдресПартнера;
			СтруктураВозврата.КонтактноеЛицо = Строка(Выборка.КонтактноеЛицо);
			СтруктураВозврата.Телефон = Выборка.ТелефонКЛ;
			
		КонецЕсли;		
		
	КонецЦикла;
	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаКлиенте
Процедура ОформитьЗаявкуНаДоставку(Команда)
	
	URL2 = "http://www.ttggroup.ru/services/courier-delivery/index.php?cabmode=3";
	ВидСтраницы = "Заявка";
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьЗаявку(Команда)
	
	ЗаполнитьЗаявку();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Журналирование.ЗаписатьЛог(,,"Форма списка ИТС", НЕ РольДоступна("ДолжностьМенеджерПоПродажам") И НЕ РольДоступна("ДолжностьМенеджерПроектов"));	
	
	Элементы.ТТГ.Видимость = ПорталТТГ;
	
КонецПроцедуры

&НаКлиенте
Процедура ПорталТТГПриИзменении(Элемент)
	
	Элементы.ТТГ.Видимость = ПорталТТГ;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыИТС(Знач Стр, Укомплектовано = Неопределено, Передано = Неопределено, Доставлено = Неопределено, Курьер = Неопределено)
	
	НЗ = РегистрыСведений.А_ИТС.СоздатьНаборЗаписей();

	Для каждого ТекСтрока Из Стр Цикл	
		
		НЗ.Отбор.Период.Установить(ТекСтрока.Период);
		НЗ.Отбор.РегНомер.Установить(ТекСтрока.РегНомер);
		НЗ.Прочитать();

		Если Укомплектовано = Истина Тогда
		
			НЗ[0].Укомплектован = Истина;
			
		КонецЕсли;
		
		Если Передано = Истина Тогда
		
			НЗ[0].ПереданКурьеру = Истина;
			
		КонецЕсли;
		
		Если Доставлено = Истина Тогда
		
			НЗ[0].Доставлен = Истина;
			
		КонецЕсли;
		
		Если Курьер <> Неопределено Тогда
		
			НЗ[0].КурьерскаяСлужба = Курьер;
			
		КонецЕсли;
		
		НЗ.Записать();
		
	КонецЦикла;
		
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВсеУкомплектовано(Команда)
	
	УстановитьПараметрыИТС(Элементы.Список.ВыделенныеСтроки,Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВсеПереданоКурьеру(Команда)
	УстановитьПараметрыИТС(Элементы.Список.ВыделенныеСтроки,,Истина);
КонецПроцедуры

&НаКлиенте
Процедура ВсеДоставлено(Команда)
	УстановитьПараметрыИТС(Элементы.Список.ВыделенныеСтроки,,, Истина);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКурьера(Команда)
	
	ВыбКурьер = Неопределено;
	
	Если ВвестиЗначение(ВыбКурьер, "Выберите курьерскую службу", Тип("СправочникСсылка.Контрагенты")) Тогда
	
		УстановитьПараметрыИТС(Элементы.Список.ВыделенныеСтроки,,,, ВыбКурьер);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоручениеДляКурьера(Команда)
	
	ТД = ПоручениеДляКурьераНаСервере();
	
	ТД.Показать();
	
КонецПроцедуры

&НаСервере
Функция ПоручениеДляКурьераНаСервере()

	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	А_ИТС.КурьерскаяСлужба КАК Курьер,
	               |	А_ИТС.Контрагент КАК Контрагент,
	               |	А_ИТС.РегНомер КАК РегНомер,
	               |	А_ИТС.Период КАК Период,
	               |	А_ИТС.ВидИТС КАК ВидИТС,
	               |	А_ИТС.НачалоПодписки КАК НачалоПодписки,
	               |	А_ИТС.ОкончаниеПодписки КАК ОкончаниеПодписки,
	               |	ВЫРАЗИТЬ(А_ИТС.Комментарий КАК СТРОКА(150)) КАК Комментарий,
	               |	ВЫРАЗИТЬ(А_ИТС.Контрагент.Адрес КАК СТРОКА(150)) КАК Адрес,
	               |	А_ИТС.Контрагент.НаименованиеПолное КАК НаименованиеПолное,
	               |	А_ИТС.Контрагент.Наименование КАК Наименование,
	               |	А_ИТС.Контрагент.ЗонаДоставки КАК ЗонаДоставки
	               |ИЗ
	               |	РегистрСведений.А_ИТС КАК А_ИТС
	               |ГДЕ
	               |	НЕ А_ИТС.Доставлен
	               |	И НЕ А_ИТС.Контрагент.ОтказОтДоставкиИТС
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Курьер,
	               |	ЗонаДоставки,
	               |	Адрес";
		
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ТД = Новый ТабличныйДокумент;
	
	Макет = РегистрыСведений.А_ИТС.ПолучитьМакет("ПоручениеКурьеру");
	
	ОбластьШапка 		= Макет.ПолучитьОбласть("Шапка");
	ОбластьСТрока 		= Макет.ПолучитьОбласть("Строка");
	ОбластьСовпадение 	= Макет.ПолучитьОбласть("СовпадениеАдреса");
	ОбластьПодвал 		= Макет.ПолучитьОбласть("Подвал");
	
	ТекКурьер = Неопределено;
	
	НомерТочки = 0;
	НомерПП = 0;
	
	ПредыдущийАдрес = "";
	ТекЗонаДоставки = Неопределено;
	Подпункт = 0;
	НачалоГруппы = 0;
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(Выборка.Контрагент) Тогда
			
			ВызватьИсключение "В реестре есть незаполненные контрагенты!";
			
		КонецЕсли;
		
		Если (ТекКурьер <> Выборка.Курьер) Тогда
			
			Если (ТекКурьер <> Неопределено) Тогда
				
				ОбластьПодвал.Параметры.ВсегоТочек = НомерТочки;
				ТД.Вывести(ОбластьПодвал);
				ТД.ВывестиГоризонтальныйРазделительСтраниц();
				
			КонецЕсли;
			
			ТекКурьер = Выборка.Курьер;
			
			ПредыдущийАдрес = "";
			НомерТочки = 0;
			НомерПП = 0;
			
			ОбластьШапка.Параметры.Курьер = Выборка.Курьер;
			ТД.Вывести(ОбластьШапка);
			
		КонецЕсли;
			
		//НомерТочки	НомерПП	Клиент	ВидПодписки	Адрес	КонтактноеЛицо	Телефоны	
		
		НомерПП = НомерПП + 1;
				
		ПредыдущийАдрес = Выборка.Адрес;
		
		Если ЗначениеЗаполнено(Выборка.ЗонаДоставки) И (ТекЗонаДоставки = Выборка.ЗонаДоставки) Тогда
			
			ОбластьВывода = ОбластьСовпадение;
			
			Подпункт = Подпункт + 1;
			
			Если НачалоГруппы = 0 Тогда
				
				НачалоГруппы = ТД.ВысотаТаблицы;
				
			КонецЕсли;
			
			
		Иначе
			
			ТекЗонаДоставки = Выборка.ЗонаДоставки;
			
			НомерТочки = НомерТочки + 1;
			
			Подпункт = 0;
			НачалоГруппы = 0;
			
			ОбластьВывода = ОбластьСТрока;
			
		КонецЕсли;
		
		ОбластьВывода.Параметры.НомерТочки = Строка(НомерТочки);// + "." + Строка(Подпункт);
		//ОбластьВывода.Параметры.НомерПП = НомерПП;
		ОбластьВывода.Параметры.Клиент = ?(ЗначениеЗаполнено(Выборка.НаименованиеПолное), Выборка.НаименованиеПолное, Выборка.Наименование);
		ОбластьВывода.Параметры.ВидПодписки = ?(СтрНайти(ВРЕГ(Выборка.ВидИТС),"ПРОФ")>0, "ПРОФ","ТЕХНО");
		ОбластьВывода.Параметры.Адрес = Выборка.Адрес;
		
		ТелефоныОрганизации = Выборка.Контрагент.ТелефонОрганизации;
		ТелефоныКЛ = "";
		
		НайденноеКЛ = Неопределено;
		
		НайденноеКЛ = Выборка.Контрагент.КонтактныеЛица.Найти(Истина,"Основной");
				
		Если (НайденноеКЛ = Неопределено) И (Выборка.Контрагент.КонтактныеЛица.Количество() > 0) Тогда
			
			НайденноеКЛ = Выборка.Контрагент.КонтактныеЛица[0];
			
		КонецЕсли;
		
		Если НайденноеКЛ <> Неопределено Тогда
		
			ТелефоныКЛ = НайденноеКЛ.Телефон + "; ";
		
			ОбластьВывода.Параметры.КонтактноеЛицо = НайденноеКЛ.ФИО;
			
		Иначе
			
			ТелефоныКЛ = "";
		
			ОбластьВывода.Параметры.КонтактноеЛицо = "";
			
		КонецЕсли;
		
		ОбластьВывода.Параметры.Телефоны = "Телефоны контактного лица: " + Символ(10) + ТелефоныКЛ + ?(ТелефоныОрганизации = "","",Символ(10) + "Телефоны организации: " + Символ(10) + ТелефоныОрганизации);
		
		ТД.Вывести(ОбластьВывода);
		
		Если Подпункт > 0 Тогда //Значит выводили подпункт, нужно объединить ячейку
			
			ТекОбласть = ТД.Область(НачалоГруппы,2,ТД.ВысотаТаблицы,2);
			ТекОбласть.Объединить();
			
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОбластьПодвал.Параметры.ВсегоТочек = НомерТочки;
	ТД.Вывести(ОбластьПодвал);
	
	ТД.ОтображатьГруппировки = Ложь;
	ТД.ОтображатьЗаголовки = Ложь;
	ТД.ОтображатьСетку = Ложь;
	
	Возврат ТД;
	
	
КонецФункции
