#Область ОбработчикиСобытийФормы



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	//КОЛЛИЗИЯ

	//Журналирование.ЗаписатьЛог(,,"Форма списка ИТС", НЕ РольДоступна("ДолжностьМенеджерПоПродажам") И НЕ РольДоступна("ДолжностьМенеджерПроектов"));		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьИзExcel(Команда)

	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл";
	Диалог.ПолноеИмяФайла = ""; 
	Фильтр = "Файл NewSub Excel (*.xlsx)|*newsub*.xlsx"; 
	Диалог.Фильтр = Фильтр; 
    Диалог.МножественныйВыбор = Ложь;

	НачатьПомещениеФайла(Новый ОписаниеОповещения("ЗагрузитьИзExcelЗавершение", ЭтотОбъект), , Диалог, Истина, УникальныйИдентификатор);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗагрузитьИзExcelЗавершение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт

    Если Результат Тогда

		РасширениеФайла = ПолучитьРасширениеФайла(ВыбранноеИмяФайла);
		ЗагрузитьДанныеНаСервере(Адрес, РасширениеФайла);
		Элементы.Список.Обновить();

    КонецЕсли 

КонецПроцедуры

&НаСервере
Функция ЗагружатьДоговор(НазваниеДоговора)
	//****
	МассивЗагружаемых = Новый Массив;
	МассивЗагружаемых.Добавить("ИТС Технологическая поставка");
	МассивЗагружаемых.Добавить("ИТС Проф");
	МассивЗагружаемых.Добавить("Предприятие через Интернет ТЕХНО");
	МассивЗагружаемых.Добавить("Предприятие через Интернет ПРОФ");
	МассивЗагружаемых.Добавить("СтартЭДО");
	МассивЗагружаемых.Добавить("1С:КП Базовый");
	МассивЗагружаемых.Добавить("1С:КП ПРОФ 8+4");
	МассивЗагружаемых.Добавить("1С:КП ПРОФ на 12 месяцев с помесячной оплатой и автоматической пролонгацией");
	МассивЗагружаемых.Добавить("1С:КП Базовый на 12 месяцев с помесячной оплатой и автоматической пролонгацией");
	МассивЗагружаемых.Добавить("1С:КП ПРОФ");
	
	Возврат МассивЗагружаемых.Найти(СокрЛП(НазваниеДоговора)) <> Неопределено;
			
КонецФункции

&НаСервере
Функция ЗначениеХЛС(ХЛС, НомерСтроки, НомерКолонки)
	
	ТекСтрока = ХЛС.Получить(НомерСтроки - 1);
	Возврат ТекСтрока[НомерКолонки - 1];
	
КонецФункции

 &НаСервере
Функция ПодготовитьТаблицуСДанными(АдресХранилищаФайла, РасширениеФайла) 
	
	ИмяФайлаСервер = ПолучитьИмяВременногоФайла(РасширениеФайла);
	ФайлИмпорта = ПолучитьИзВременногоХранилища(АдресХранилищаФайла);
	ФайлИмпорта.Записать(ИмяФайлаСервер);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Попытка
		ТабличныйДокумент.Прочитать(ИмяФайлаСервер, СпособЧтенияЗначенийТабличногоДокумента.Текст);
		//ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("R1:R4"));
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
	КонецПопытки;	
		
	ПЗ = Новый ПостроительЗапроса;
	ПЗ.ИсточникДанных = Новый ОписаниеИсточникаДанных(ТабличныйДокумент.Область(5,,ТабличныйДокумент.ВысотаТаблицы));
	ПЗ.ДобавлениеПредставлений = ТипДобавленияПредставлений.НеДобавлять;
	ПЗ.ЗаполнитьНастройки();
	ПЗ.Выполнить();
	
	ТаблицаПромежуточныхДанных = ПЗ.Результат.Выгрузить();
	
	УдалитьФайлы(ИмяФайлаСервер);
	
	Возврат	ТаблицаПромежуточныхДанных;
	
КонецФункции

&НаСервере
Процедура ЗагрузитьДанныеНаСервере(Адрес, РасширениеФайла)	

	УстановитьПривилегированныйРежим(Истина);	
	
	ХЛС = ПодготовитьТаблицуСДанными(Адрес, РасширениеФайла) ;            
			
//	ТекСтрока = 1;
//		
//	ДатаОтчетаСтр = Прав(ТабДок.Область(1, 1).Текст,10);//Прав(ЗначениеХЛС(ХЛС,1,1),10);
//	
//	ДатаОтчета = Дата(Прав(ДатаОтчетаСтр, 4),Сред(ДатаОтчетаСтр,4,2), Лев(ДатаОтчетаСтр,2));
//			
//	Пока ТекСтрока <= ХЛС.Количество() Цикл
//
//		Если (Найти(ВРЕГ(СокрЛП(ЗначениеХЛС(ХЛС,ТекСтрока,4))), "АНАЛИТИКА") > 0) ИЛИ НЕ ЗагружатьДоговор(ЗначениеХЛС(ХЛС,ТекСтрока,6)) Тогда
//							
//			Сообщить("Пропущена строка " + СокрЛП(ЗначениеХЛС(ХЛС,ТекСтрока,6)) + " " + СокрЛП(ЗначениеХЛС(ХЛС,ТекСтрока,4)));
//			
//			ТекСтрока = ТекСтрока + 1;
//			
//			Продолжить;
//			
//		КонецЕсли;
//		
//		РегНомер = Формат(ЗначениеХЛС(ХЛС,ТекСтрока,3), "ЧГ=0");
//		
//		ДатаНач = СокрЛП(ЗначениеХЛС(ХЛС,ТекСтрока,7));
//		ДатаКон = СокрЛП(ЗначениеХЛС(ХЛС,ТекСтрока,8));
//		
//		ЗагрузитьСтрокуОтчетаИТС(ДатаОтчета, РегНомер, СокрЛП(ЗначениеХЛС(ХЛС,ТекСтрока,6)), ЗначениеХЛС(ХЛС,ТекСтрока,3), ЗначениеХЛС(ХЛС,ТекСтрока,5), ЗначениеХЛС(ХЛС,ТекСтрока,4), ДатаНач, ДатаКон);
//		
//		ТекСтрока = ТекСтрока + 1;
//		
//	КонецЦикла;
//	   
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТЗИзМакета(ТабДок, КолонкаИндекса = 1)
	
	//Начальные установки для Excel документа
	КоличествоКолонок = 30;
	ПозицияНачалаТаблицы = 5; 
	МаксКоличествоСтрок = 1000;
	
	ТаблицаДанных = Новый ТаблицаЗначений;
	НомерКолонки = 0;
	Пока НомерКолонки < КоличествоКолонок Цикл
		НомерКолонки = НомерКолонки + 1;
		ИмяКолонки = ТабДок.Область(ПозицияНачалаТаблицы, НомерКолонки).Текст;
		
		ИмяКолонки = СтрЗаменить(ИмяКолонки,"№","Номер");
		ИмяКолонки = СтрЗаменить(ИмяКолонки,".","");
		ИмяКолонки = СтрЗаменить(ИмяКолонки,":","");
		ИмяКолонки = СтрЗаменить(ИмяКолонки,Символы.ПС,"");
		ИмяКолонки = СтрЗаменить(ИмяКолонки," ","");
		ИмяКолонки = СтрЗаменить(ИмяКолонки,"/","");
		ИмяКолонки = СтрЗаменить(ИмяКолонки,")","");
		ИмяКолонки = СтрЗаменить(ИмяКолонки,"(","");
		ИмяКолонки = СтрЗаменить(ИмяКолонки,"-","");
		ИмяКолонки = СтрЗаменить(ИмяКолонки,"%","");
		ИмяКолонки = СтрЗаменить(ИмяКолонки,Символы.ПС,"");
		
		Если ПустаяСтрока(ИмяКолонки) Тогда
			ИмяКолонки = "Номер" + СТРОКА(НомерКолонки);
		КонецЕсли;     
				
		ТаблицаДанных.Колонки.Добавить(ИмяКолонки);
	КонецЦикла;
	
	СчетчикКолонок = НомерКолонки - 1;
	
	НомерСтроки = ПозицияНачалаТаблицы; ФлагПрерывания = Ложь;
	Пока НомерСтроки < МаксКоличествоСтрок Цикл
		НомерСтроки = НомерСтроки + 1;
		Стр = ТаблицаДанных.Добавить();
		
		Для А = 1 ПО СчетчикКолонок Цикл
			ТекстКолонки = ТабДок.Область(НомерСтроки, А).Текст;
			ТекстКолонки2 = ТабДок.Область(НомерСтроки, А+1).Текст;
			ТекстКолонки3 = ТабДок.Область(НомерСтроки, А+2).Текст;
			ТекстКолонки4 = ТабДок.Область(НомерСтроки, А+3).Текст;
			
			Если ПустаяСтрока(ТекстКолонки) и ПустаяСтрока(ТекстКолонки2) и ПустаяСтрока(ТекстКолонки3) и ПустаяСтрока(ТекстКолонки4) Тогда
				Если А = КолонкаИндекса Тогда
					Флагпрерывания = Истина;
					ТаблицаДанных.Удалить(Стр);
				КонецЕсли;
			Иначе
				Стр[А - 1] = ТекстКолонки
			КонецЕсли;
			
			Если Флагпрерывания Тогда
				Прервать
			КонецЕсли;
		КонецЦикла;
		
		Если Флагпрерывания Тогда
			Прервать
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицаДанных
	
КонецФункции

&НаКлиенте
Функция ПолучитьРасширениеФайла(ИмяФайла) Экспорт
	ПозицияПоследнейТочки 			= 0;
	РасширениеФайла 				= ИмяФайла;
	
	Пока 1 = 1 Цикл
		ПозицияПоследнейТочки = СтрНайти(РасширениеФайла, ".");
		Если ПозицияПоследнейТочки 	= 0 Тогда
			Прервать;
		Иначе
			РасширениеФайла 		= Сред(РасширениеФайла, ПозицияПоследнейТочки + 1)
		КонецЕсли;
	КонецЦикла;
	
	Возврат ?(РасширениеФайла = ИмяФайла, "", РасширениеФайла);
КонецФункции

&НаСервере
Процедура ЗагрузитьСтрокуОтчетаИТС(ДатаОтчета, РегНомер, ЕхВидИТС, ЕхРегНомер, ЕхИНН, ЕхНаименование, ДатаНач, ДатаКон)
	
			ИТС_НаборЗаписей = РегистрыСведений.А_ИТС.СоздатьНаборЗаписей();
			
			ИТС_НаборЗаписей.Отбор.Период.Установить(ДатаОтчета);
			ИТС_НаборЗаписей.Отбор.РегНомер.Установить(РегНомер);
			ИТС_НаборЗаписей.Прочитать();
			
			ИТС_НаборЗаписей.Очистить();
			
			НоваяЗапись = ИТС_НаборЗаписей.Добавить();
			
			НоваяЗапись.Период = ДатаОтчета;
			НоваяЗапись.РегНомер = РегНомер;
			НоваяЗапись.ВидИтс = СтрЗаменить(ЕхВидИТС,"Предприятие через Интернет","Fresh.com");
			
			Попытка
			
				РегНомерЧисло = Формат(ЕхРегНомер, "ЧГ=0");
				
			Исключение
				
				РегНомерЧисло = 0;
				
			КонецПопытки;						
			
			ВыбИНН = Формат(ЕхИНН, "ЧГ=0");
			
			Если ЗначениеЗаполнено(ВыбИНН) Тогда
			
				Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("ИНН", ВыбИНН);
				
			ИНаче
				
				Контрагент = Неопределено;
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Контрагент) Тогда
				
				НоваяЗапись.Контрагент = Контрагент;
				
			Иначе
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				               |	КонтрагентыРегНомера.Ссылка
				               |ИЗ
				               |	Справочник.Контрагенты.РегНомера КАК КонтрагентыРегНомера
				               |ГДЕ
				               |	КонтрагентыРегНомера.РегНомер = &Значение";
				
				Запрос.УстановитьПараметр("Значение", РегНомерЧисло);
				
				Результат = Запрос.Выполнить();
				Выборка = Результат.Выбрать();
				
				Если Выборка.Следующий() Тогда
				
					НоваяЗапись.Контрагент = Выборка.Ссылка;	
					
				Иначе
					
					НоваяЗапись.Комментарий = "Не найден: " + СокрЛП(Формат(ЕхНаименование));
					
				КонецЕсли;
				
			КонецЕсли;
						

			
			НоваяЗапись.НачалоПодписки = Дата(Прав(ДатаНач, 4),Сред(ДатаНач,4,2), Лев(ДатаНач,2));
			НоваяЗапись.ОкончаниеПодписки = Дата(Прав(ДатаКон, 4),Сред(ДатаКон,4,2), Лев(ДатаКон,2));
			
			Если ЗначениеЗаполнено(НоваяЗапись.Контрагент) И ЗначениеЗаполнено(НоваяЗапись.Контрагент.ОсновнойКурьер) Тогда
			
				НоваяЗапись.КурьерскаяСлужба = НоваяЗапись.Контрагент.ОсновнойКурьер;
				
			ИначеЕсли ЗначениеЗаполнено(НоваяЗапись.Контрагент) И (НоваяЗапись.Контрагент.БизнесРегион = Справочники.БизнесРегионы.Москва) Тогда
				
				НоваяЗапись.КурьерскаяСлужба = Константы.ОсновнойКурьерМосква.Получить();
				
			ИначеЕсли ЗначениеЗаполнено(НоваяЗапись.Контрагент) И (НоваяЗапись.Контрагент.БизнесРегион = Справочники.БизнесРегионы.МосковскаяОбласть) Тогда
				
				НоваяЗапись.КурьерскаяСлужба = Константы.ОсновнойКурьерОдинцово.Получить();
				
			ИначеЕсли ЗначениеЗаполнено(НоваяЗапись.Контрагент) И (НоваяЗапись.Контрагент.БизнесРегион = Справочники.БизнесРегионы.Одинцово) Тогда
				
				НоваяЗапись.КурьерскаяСлужба = Константы.ОсновнойКурьерОдинцово.Получить();
				
			ИначеЕсли ЗначениеЗаполнено(НоваяЗапись.Контрагент) И (НоваяЗапись.Контрагент.БизнесРегион = Справочники.БизнесРегионы.Западная13) Тогда
				
				НоваяЗапись.КурьерскаяСлужба = Константы.ОсновнойКурьерЗападная.Получить();
				
			КонецЕсли;
				
			ИТС_НаборЗаписей.Записать();

	
КонецПроцедуры

#КонецОбласти

